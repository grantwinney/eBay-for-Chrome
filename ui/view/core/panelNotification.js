/*!
 * Copyright (C) 2007-2015 eBay Inc. All Rights Reserved.
 */
var PanelNotification = {
    _SHOW_DEALS_DELAY: 5000,
    _paginationMoveToTop: false,
    init: function () {
        $("[rel^=i18n],[alt^=i18n]").i18n({ attributeNames: ["alt"] });
        Sidebar.updateTooltips();
        ObserverHelper.addObserver(this, Topics.ACCOUNT_SIGNED_IN);
        ObserverHelper.addObserver(this, Topics.ACCOUNT_SIGNED_OUT);
        ObserverHelper.addObserver(this, Topics.SYMBAN_DATA_UPDATING);
        ObserverHelper.addObserver(this, Topics.SYMBAN_DATA_UPDATED);
        this._addEventListeners();
        if (Account.getAccount()) {
            this.populateNotificationData();
            this._startDataUpdate();
        }
    },
    uninit: function () {
        ObserverHelper.removeObserver(this, Topics.ACCOUNT_SIGNED_IN);
        ObserverHelper.removeObserver(this, Topics.ACCOUNT_SIGNED_OUT);
        ObserverHelper.removeObserver(this, Topics.SYMBAN_DATA_UPDATING);
        ObserverHelper.removeObserver(this, Topics.SYMBAN_DATA_UPDATED);
    },
    _addEventListeners: function () {
        $("#panel-notification-deals-link").click(function (aEvent) {
            EventAnalytics.push({
                key: "SignedInExit",
                action: "ClickEmptyPanel",
                label: "NotificationsEmpty"
            });
            if (Site.siteHasDeals() || !Site.isSupportedSite()) {
                var domain = Site.getDealsDomain();
                var params = { dealsDomain: "deals", domain: domain };
                RoverUrlHelper.loadPage("viewDeals", "dealClick", params, aEvent);
            }
            else {
                RoverUrlHelper.loadPage("homePage", "dealClick", null, aEvent);
            }
        }.bind(this));
    },
    populateNotificationData: function () {
        var symbanData = SymbanService.userData;
        Sidebar.showLoading("notification");
        this._setNotificationsBadge(symbanData.badgeCount);
        if (symbanData.loaded) {
            this._setNotificationsPanel(symbanData.notifications, symbanData.prev, symbanData.next);
        }
    },
    _showDeals: function () {
        setTimeout(function () {
            $("#panel-notification-empty-inner").fadeOut("fast", function () {
                $("#panel-notification-deals").fadeIn("fast");
            });
        }.bind(this), this._SHOW_DEALS_DELAY);
    },
    _createNotificationBoxes: function (aNotifications, aPrevPath, aNextPath) {
        var that = this;
        var content = $(".panel-notification-main-content");
        content.empty();
        $.each(aNotifications, function (aIndex, aNotification) {
            content.append(NotificationItemBox.createNotificationItemBox(aNotification));
        });
        if (this._paginationMoveToTop) {
            Sidebar.scrollToTop("panels");
            this._paginationMoveToTop = false;
        }
        if (aPrevPath || aNextPath) {
            var paginationBox = $("<div>").addClass("notification-pagination-box");
            var button;
            if (aPrevPath) {
                button =
                    $("<button>").attr({
                        "class": "image-button notification-pagination-prev",
                        "title": "<"
                    }).click(function (aEvent) {
                        that._paginationMoveToTop = true;
                        var apiPath = $(aEvent.target).data("notificationApiPath");
                        SymbanService.getSymbanData(apiPath);
                    });
                button.data("notificationApiPath", aPrevPath);
                paginationBox.append(button);
            }
            if (aNextPath) {
                button =
                    $("<button>").attr({
                        "class": "image-button notification-pagination-next",
                        "title": ">"
                    }).click(function (aEvent) {
                        that._paginationMoveToTop = true;
                        var apiPath = $(aEvent.target).data("notificationApiPath");
                        SymbanService.getSymbanData(apiPath);
                    });
                button.data("notificationApiPath", aNextPath);
                paginationBox.append(button);
            }
            content.append(paginationBox);
        }
        Sidebar.adjustTabIndex();
        Sidebar.removeTabIndex();
        if ("Window" == UtilityHelper.getClient().os) {
            $(".notification-item-close-button").focus(function (aEvent) {
                var element = $(aEvent.target);
                var parents = element.parents("a");
                if (0 < parents.length) {
                    $(parents[0]).attr("tabindex", "-1");
                }
            });
        }
    },
    _setNotificationsBadge: function (aBadgeCount) {
        if ("undefined" != typeof (aBadgeCount) && parseInt(aBadgeCount) > 0) {
            $(".badge").css("display", "inline-block");
            if (parseInt(aBadgeCount) >
                PropertyDAO.get(PropertyDAO.PROP_NOTIFICATIONS_LIMIT_ON_UI)) {
                if (false === $(".badge").hasClass("badge-more-chars")) {
                    $(".badge").addClass("badge-more-chars");
                }
                aBadgeCount = PropertyDAO.get(PropertyDAO.PROP_NOTIFICATIONS_LIMIT_ON_UI).toString() + "+";
            }
            else {
                $(".badge").removeClass("badge-more-chars");
            }
            $(".badge").text(aBadgeCount);
        }
        else {
            $(".badge").hide();
        }
    },
    _setNotificationsPanel: function (aNotifications, aPrevPath, aNextPath) {
        if ("undefined" != typeof (aNotifications) && Object.keys(aNotifications).length > 0) {
            this._createNotificationBoxes(aNotifications, aPrevPath, aNextPath);
            $("#panel-notification-empty").css("display", "none");
            $("#panel-notification-main").css("display", "block");
            $("[title^=i18n]").i18n({ attributeNames: ["title"] });
            Sidebar.updateTooltips();
        }
        else {
            if (SymbanService.isUpdatingData) {
                $("#panel-notification-main").css("display", "none");
                $("#panel-notification-empty").css("display", "none");
            }
            else {
                $("#panel-notification-main").css("display", "none");
                setTimeout(function () {
                    PanelNotification._showDeals();
                    $("#panel-notification-empty").css("display", "block");
                }, 200, false);
            }
        }
    },
    apiHasItems: function () {
        var apiHasItems = false;
        var notifications = SymbanService.userData.notifications;
        if (notifications && Object.keys(notifications).length > 0) {
            apiHasItems = true;
        }
        return apiHasItems;
    },
    _startDataUpdate: function () {
        this._dataUpdateId = setTimeout(function () {
            this._updateTimeLeft();
            this._startDataUpdate();
        }.bind(this), 1000);
    },
    _stopDataUpdate: function () {
        if (this._dataUpdateId) {
            clearTimeout(this._dataUpdateId);
            delete this._dataUpdateId;
        }
    },
    _updateTimeLeft: function () {
        $(".panel-notification-main-content").children("a").each(function () {
            NotificationItemBox.updateTimeLeft($(this));
        });
    },
    observe: function (aTopic, aData) {
        switch (aTopic) {
            case Topics.ACCOUNT_SIGNED_IN:
                this._startDataUpdate();
                break;
            case Topics.ACCOUNT_SIGNED_OUT:
                this._stopDataUpdate();
                break;
            case Topics.SYMBAN_DATA_UPDATED:
                this.populateNotificationData();
                break;
            case Topics.SYMBAN_DATA_UPDATING:
                Sidebar.showLoading("notification");
                break;
        }
    }
};
$(window).unload(function () { PanelNotification.uninit(); });
//# sourceMappingURL=data:application/json;base64,