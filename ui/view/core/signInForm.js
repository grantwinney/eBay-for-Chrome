/*!
 * Copyright (C) 2007-2015 eBay Inc. All Rights Reserved.
 */
var SignInForm = {
    _slideshowInterval: 5 * 1000,
    _afterClickCarouselInterval: 30 * 1000,
    _slideshowPadding: 59,
    _slideshowMargin: 8,
    _carouselAutoplayTimeout: null,
    owlCarousel: null,
    init: function () {
        ObserverHelper.addObserver(this, Topics.ACCOUNT_SIGNED_OUT);
        $("[rel^=i18n],[title^=i18n],[alt^=i18n]").i18n({ attributeNames: ["title", "alt"] });
        Sidebar.updateTooltips();
        $("#sign-in-button").unbind("click");
        $("#sign-in-button").click(function (aEvent) {
            EventAnalytics.push({
                key: "SignedOutExit",
                action: "ClickSignIn"
            });
            this.signInToeBayLove(aEvent);
        }.bind(this));
        $(".sign-in-container-register-link").unbind("click");
        $(".sign-in-container-register-link").click(function (event) {
            EventAnalytics.push({
                key: "SignedOutExit",
                action: "ClickCreateAccount"
            });
            RoverUrlHelper.loadPage("register", "register", null, event);
        }.bind(this));
        if (window.innerWidth > 0) {
            this._setSlideshow();
        }
        else {
            window.onresize = function () {
                this._setSlideshow();
            }.bind(this);
        }
    },
    uninit: function () {
        ObserverHelper.removeObserver(this, Topics.ACCOUNT_SIGNED_OUT);
    },
    signInToeBayLove: function (aEvent) {
        var clientId = ApiHelper.getEndPoint("clientId");
        var redirectUri = ApiHelper.getEndPoint("redirectUri");
        var params = {};
        params.clientid = clientId;
        params.redirecturi = redirectUri;
        RoverUrlHelper.loadPage("eBayLoVe", "signInFormClick", params, aEvent);
    },
    _slideshowHideLastSlide: function (aEvent) {
        if (aEvent.page.index === 0) {
            $(".last-slide").parent().addClass("hidden-slide");
        }
        else {
            $(".hidden-slide").removeClass("hidden-slide");
        }
    },
    _goToSlide: function (aEvent) {
        var index = 0;
        var currentElement = $(aEvent.currentTarget).children().first();
        if (currentElement) {
            var classList = $(currentElement).attr('class').split(/\s+/);
            $.each(classList, function (aIndex, aValue) {
                if (aValue.indexOf("index-") > -1) {
                    index = aValue.substring(aValue.indexOf("-") + 1, aValue.length);
                    SignInForm.owlCarousel.trigger('to.owl.carousel', [index]);
                    SignInForm.owlCarousel.trigger('stop.owl.autoplay');
                    return;
                }
            });
        }
    },
    _setSlideshow: function () {
        this.owlCarousel = $(".owl-carousel");
        this.owlCarousel.on('initialized.owl.carousel', function (aEvent) {
            SignInForm._slideshowHideLastSlide(aEvent);
        });
        this.owlCarousel.on('changed.owl.carousel', function (aEvent) {
            SignInForm._slideshowHideLastSlide(aEvent);
        });
        this.owlCarousel.on('dragged.owl.carousel', function (aEvent) {
            SignInForm._setCarouselWaitInterval(aEvent);
        });
        this.owlCarousel.owlCarousel({
            loop: true,
            margin: SignInForm._slideshowMargin,
            stagePadding: SignInForm._slideshowPadding,
            autoplay: true,
            autoplayTimeout: SignInForm._slideshowInterval,
            responsive: false,
            items: 1
        });
        $(".owl-item").click(function (aEvent) {
            SignInForm._setCarouselWaitInterval(aEvent);
            SignInForm._goToSlide(aEvent);
            EventAnalytics.push({
                key: "SignedOutExit",
                action: "ClickCarousel"
            });
        });
        if (BrowserHelper.isRetinaDisplay()) {
            var carouselImages = $(".slideshow-item-image");
            var backgroundImage;
            $.each(carouselImages, function (aIndex, aValue) {
                backgroundImage = $(aValue).css('background-image');
                backgroundImage = backgroundImage.replace(".png", "@2x.png");
                $(aValue).css('background-image', backgroundImage);
            });
        }
        $(".owl-nav").remove();
    },
    _setCarouselWaitInterval: function (aEvent) {
        SignInForm.owlCarousel.trigger('stop.owl.autoplay');
        if (!SignInForm._carouselAutoplayTimeout) {
            SignInForm._carouselAutoplayTimeout = setTimeout(function () {
                SignInForm.owlCarousel.trigger('play.owl.autoplay');
                clearTimeout(SignInForm._carouselAutoplayTimeout);
                delete SignInForm._carouselAutoplayTimeout;
            }, SignInForm._afterClickCarouselInterval, false);
        }
    },
    observe: function (aTopic, aData) {
        switch (aTopic) {
            case Topics.ACCOUNT_SIGNED_OUT:
                $("#sign-in").load("core/signInForm.html", function () {
                    SignInForm.init();
                });
                break;
        }
    }
};
$(window).unload(function () { SignInForm.uninit(); });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2lnbkluRm9ybS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3VpL3ZpZXcvY29yZS9zaWduSW5Gb3JtLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztHQUVHO0FBS0gsSUFBSSxVQUFVLEdBQUc7SUFFZixrQkFBa0IsRUFBRSxDQUFDLEdBQUcsSUFBSTtJQUU1QiwyQkFBMkIsRUFBRSxFQUFFLEdBQUcsSUFBSTtJQUN0QyxpQkFBaUIsRUFBRSxFQUFFO0lBQ3JCLGdCQUFnQixFQUFFLENBQUM7SUFDbkIsd0JBQXdCLEVBQUUsSUFBSTtJQUM5QixXQUFXLEVBQUUsSUFBSTtJQUtqQixJQUFJLEVBQUc7UUFDTCxjQUFjLENBQUMsV0FBVyxDQUFDLElBQUksRUFBRSxNQUFNLENBQUMsa0JBQWtCLENBQUMsQ0FBQztRQUc1RCxDQUFDLENBQUMsdUNBQXVDLENBQUMsQ0FBQyxJQUFJLENBQUMsRUFBRSxjQUFjLEVBQUUsQ0FBRSxPQUFPLEVBQUUsS0FBSyxDQUFFLEVBQUUsQ0FBQyxDQUFDO1FBQ3hGLE9BQU8sQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUV6QixDQUFDLENBQUMsaUJBQWlCLENBQUMsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDckMsQ0FBQyxDQUFDLGlCQUFpQixDQUFDLENBQUMsS0FBSyxDQUFDLFVBQVMsTUFBTTtZQUN4QyxjQUFjLENBQUMsSUFBSSxDQUFDO2dCQUNsQixHQUFHLEVBQUUsZUFBZTtnQkFDcEIsTUFBTSxFQUFFLGFBQWE7YUFDdEIsQ0FBQyxDQUFDO1lBQ0gsSUFBSSxDQUFDLGdCQUFnQixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ2hDLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztRQUVkLENBQUMsQ0FBQyxrQ0FBa0MsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUN0RCxDQUFDLENBQUMsa0NBQWtDLENBQUMsQ0FBQyxLQUFL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cEQsQ0FBQztJQUNILENBQUM7SUFPRCxPQUFPLEVBQUcsVUFBUyxNQUFNLEVBQUUsS0FBSztRQUU5QixNQUFNLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO1lBQ2YsS0FBSyxNQUFNLENBQUMsa0JBQWtCO2dCQUM1QixDQUFDLENBQUMsVUFBVSxDQUFDLENBQUMsSUFBSSxDQUFDLHNCQUFzQixFQUFFO29CQUN6QyxVQUFVLENBQUMsSUFBSSxFQUFFLENBQUM7Z0JBQ3BCLENBQUMsQ0FBQyxDQUFDO2dCQUNILEtBQUssQ0FBQztRQUNWLENBQUM7SUFDSCxDQUFDO0NBQ0YsQ0FBQztBQUdGLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxNQUFNLENBQUMsY0FBYSxVQUFVLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQ29weXJpZ2h0IChDKSAyMDA3LTIwMTUgZUJheSBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKi9cblxuLyoqXG4gKiBTaWduIGluIEZvcm0gQ2xhc3MuXG4gKi9cbnZhciBTaWduSW5Gb3JtID0ge1xuICAvL2ludGVydmFsIGluIG1pbGxpc2Vjb25kcyB0byBjaGFuZ2UgdGhlIGltYWdlc1xuICBfc2xpZGVzaG93SW50ZXJ2YWw6IDUgKiAxMDAwLFxuICAvL2ludGVydmFsIGluIG1pbGxpc2Vjb25kcyB0byByZXN1bWUgdGhlIGNhcm91c2VsIHBsYXkgYWZ0ZXIgdXNlciBjbGlja3Mgb24gYW4gaW1hZ2VcbiAgX2FmdGVyQ2xpY2tDYXJvdXNlbEludGVydmFsOiAzMCAqIDEwMDAsXG4gIF9zbGlkZXNob3dQYWRkaW5nOiA1OSwgIC8vdmlzaWJsZSBwYXJ0IG9mIHRoZSBwcmV2aW91cyAvIG5leHQgc2xpZGUgKGluY2x1ZGVzIG1hcmdpbilcbiAgX3NsaWRlc2hvd01hcmdpbjogOCwgIC8vc2xpZGUgbWFyZ2luIGluIHBpeGVsc1xuICBfY2Fyb3VzZWxBdXRvcGxheVRpbWVvdXQ6IG51bGwsXG4gIG93bENhcm91c2VsOiBudWxsLFxuXG4gIC8qKlxuICAgKiBJbml0aWFsaXplcyB0aGUgb2JqZWN0LlxuICAgKi9cbiAgaW5pdCA6IGZ1bmN0aW9uKCkge1xuICAgIE9ic2VydmVySGVscGVyLmFkZE9ic2VydmVyKHRoaXMsIFRvcGljcy5BQ0NPVU5UX1NJR05FRF9PVVQpO1xuXG4gICAgLy8gQXBwbHkgbG9jYWxlIHRvIHRoZSByZWxldmFudCBub2Rlcy5cbiAgICAkKFwiW3JlbF49aTE4bl0sW3RpdGxlXj1pMThuXSxbYWx0Xj1pMThuXVwiKS5pMThuKHsgYXR0cmlidXRlTmFtZXM6IFsgXCJ0aXRsZVwiLCBcImFsdFwiIF0gfSk7XG4gICAgU2lkZWJhci51cGRhdGVUb29sdGlwcygpO1xuXG4gICAgJChcIiNzaWduLWluLWJ1dHRvblwiKS51bmJpbmQoXCJjbGlja1wiKTtcbiAgICAkKFwiI3NpZ24taW4tYnV0dG9uXCIpLmNsaWNrKGZ1bmN0aW9uKGFFdmVudCkge1xuICAgICAgRXZlbnRBbmFseXRpY3MucHVzaCh7XG4gICAgICAgIGtleTogXCJTaWduZWRPdXRFeGl0XCIsXG4gICAgICAgIGFjdGlvbjogXCJDbGlja1NpZ25JblwiXG4gICAgICB9KTtcbiAgICAgIHRoaXMuc2lnbkluVG9lQmF5TG92ZShhRXZlbnQpO1xuICAgIH0uYmluZCh0aGlzKSk7XG5cbiAgICAkKFwiLnNpZ24taW4tY29udGFpbmVyLXJlZ2lzdGVyLWxpbmtcIikudW5iaW5kKFwiY2xpY2tcIik7XG4gICAgJChcIi5zaWduLWluLWNvbnRhaW5lci1yZWdpc3Rlci1saW5rXCIpLmNsaWNrKGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgICBFdmVudEFuYWx5dGljcy5wdXNoKHtcbiAgICAgICAga2V5OiBcIlNpZ25lZE91dEV4aXRcIixcbiAgICAgICAgYWN0aW9uOiBcIkNsaWNrQ3JlYXRlQWNjb3VudFwiXG4gICAgICB9KTtcbiAgICAgIFJvdmVyVXJsSGVscGVyLmxvYWRQYWdlKFwicmVnaXN0ZXJcIiwgXCJyZWdpc3RlclwiLCBudWxsLCBldmVudCk7XG4gICAgfS5iaW5kKHRoaXMpKTtcblxuICAgIC8qXG4gICAgIGBvd2wuY2Fyb3VzZWxgLCB0aGUgbGlicmFyeSB3ZSB1c2UgZm9yIHRoZSBzbGlkZXNob3csIG5lZWRzIHRoZSB2YWx1ZSBvZlxuICAgICBgd2luZG93LmlubmVyV2lkdGhgIHdoZW4gaXQgc3RhcnRzLiBJZiB0aGUgdmFsdWUgaXMgMCwgaXQgdGhyb3dzIGFuIGVycm9yLlxuICAgICAqL1xuXG4gICAgLypcbiAgICAgT24gQ2hyb21lIGFuZCBGRiwgdGhlIGFjdHVhbCB2YWx1ZSBpcyBzZXQgaW1tZWRpYXRlbHkgYWZ0ZXIgd2luZG93IGxvYWQsXG4gICAgIHNvIHdlIGNhbiBpbml0aWF0ZSB0aGUgc2xpZGVzaG93LlxuICAgICAqL1xuICAgIGlmICh3aW5kb3cuaW5uZXJXaWR0aCA+IDApIHtcbiAgICAgIHRoaXMuX3NldFNsaWRlc2hvdygpO1xuICAgIH0gZWxzZSB7XG4gICAgICAvKlxuICAgICAgICBPbiBTYWZhcmksIHRoZSB2YWx1ZSBpcyBzZXQgYWZ0ZXIgYWxsIHRoZSBzY3JpcHRzIGxvYWQsIHNvIHdlIG5lZWQgdG9cbiAgICAgICAgbGlzdGVuIHRvIHRoZSBgb25yZXNpemVgIGV2ZW50LlxuICAgICAgICovXG4gICAgICB3aW5kb3cub25yZXNpemUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuX3NldFNsaWRlc2hvdygpO1xuICAgICAgfS5iaW5kKHRoaXMpO1xuICAgIH1cbiAgfSxcblxuICB1bmluaXQgOiBmdW5jdGlvbigpIHtcbiAgICBPYnNlcnZlckhlbHBlci5yZW1vdmVPYnNlcnZlcih0aGlzLCBUb3BpY3MuQUNDT1VOVF9TSUdORURfT1VUKTtcbiAgfSxcblxuICBzaWduSW5Ub2VCYXlMb3ZlIDogZnVuY3Rpb24oYUV2ZW50KSB7XG5cbiAgICB2YXIgY2xpZW50SWQgPSBBcGlIZWxwZXIuZ2V0RW5kUG9pbnQoXCJjbGllbnRJZFwiKTtcbiAgICB2YXIgcmVkaXJlY3RVcmkgPSBBcGlIZWxwZXIuZ2V0RW5kUG9pbnQoXCJyZWRpcmVjdFVyaVwiKTtcbiAgICB2YXIgcGFyYW1zID0ge307XG4gICAgcGFyYW1zLmNsaWVudGlkID0gY2xpZW50SWQ7XG4gICAgcGFyYW1zLnJlZGlyZWN0dXJpID0gcmVkaXJlY3RVcmk7XG5cbiAgICBSb3ZlclVybEhlbHBlci5sb2FkUGFnZShcImVCYXlMb1ZlXCIsIFwic2lnbkluRm9ybUNsaWNrXCIsIHBhcmFtcywgYUV2ZW50KTtcbiAgfSxcblxuICBfc2xpZGVzaG93SGlkZUxhc3RTbGlkZSA6IGZ1bmN0aW9uKGFFdmVudCkge1xuICAgIGlmIChhRXZlbnQucGFnZS5pbmRleCA9PT0gMCkge1xuICAgICAgJChcIi5sYXN0LXNsaWRlXCIpLnBhcmVudCgpLmFkZENsYXNzKFwiaGlkZGVuLXNsaWRlXCIpO1xuICAgIH0gZWxzZSB7XG4gICAgICAkKFwiLmhpZGRlbi1zbGlkZVwiKS5yZW1vdmVDbGFzcyhcImhpZGRlbi1zbGlkZVwiKTtcbiAgICB9XG4gIH0sXG5cbiAgX2dvVG9TbGlkZSA6IGZ1bmN0aW9uKGFFdmVudCkge1xuICAgIHZhciBpbmRleCA9IDA7XG4gICAgdmFyIGN1cnJlbnRFbGVtZW50ID0gJChhRXZlbnQuY3VycmVudFRhcmdldCkuY2hpbGRyZW4oKS5maXJzdCgpO1xuXG4gICAgaWYgKGN1cnJlbnRFbGVtZW50KSB7XG4gICAgICB2YXIgY2xhc3NMaXN0ID0gJChjdXJyZW50RWxlbWVudCkuYXR0cignY2xhc3MnKS5zcGxpdCgvXFxzKy8pO1xuXG4gICAgICAkLmVhY2goY2xhc3NMaXN0LCBmdW5jdGlvbihhSW5kZXgsIGFWYWx1ZSkge1xuICAgICAgICBpZiAoYVZhbHVlLmluZGV4T2YoXCJpbmRleC1cIikgPiAtMSkge1xuICAgICAgICAgIGluZGV4ID0gYVZhbHVlLnN1YnN0cmluZyhhVmFsdWUuaW5kZXhPZihcIi1cIikgKyAxLCBhVmFsdWUubGVuZ3RoKTtcbiAgICAgICAgICBTaWduSW5Gb3JtLm93bENhcm91c2VsLnRyaWdnZXIoJ3RvLm93bC5jYXJvdXNlbCcsIFtpbmRleF0pO1xuICAgICAgICAgIFNpZ25JbkZvcm0ub3dsQ2Fyb3VzZWwudHJpZ2dlcignc3RvcC5vd2wuYXV0b3BsYXknKTtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfSxcblxuICBfc2V0U2xpZGVzaG93IDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5vd2xDYXJvdXNlbCA9ICQoXCIub3dsLWNhcm91c2VsXCIpO1xuXG4gICAgdGhpcy5vd2xDYXJvdXNlbC5vbignaW5pdGlhbGl6ZWQub3dsLmNhcm91c2VsJywgZnVuY3Rpb24oYUV2ZW50KSB7XG4gICAgICBTaWduSW5Gb3JtLl9zbGlkZXNob3dIaWRlTGFzdFNsaWRlKGFFdmVudCk7XG4gICAgfSk7XG5cbiAgICB0aGlzLm93bENhcm91c2VsLm9uKCdjaGFuZ2VkLm93bC5jYXJvdXNlbCcsIGZ1bmN0aW9uKGFFdmVudCkge1xuICAgICAgU2lnbkluRm9ybS5fc2xpZGVzaG93SGlkZUxhc3RTbGlkZShhRXZlbnQpO1xuICAgIH0pO1xuXG4gICAgdGhpcy5vd2xDYXJvdXNlbC5vbignZHJhZ2dlZC5vd2wuY2Fyb3VzZWwnLCBmdW5jdGlvbihhRXZlbnQpIHtcbiAgICAgIFNpZ25JbkZvcm0uX3NldENhcm91c2VsV2FpdEludGVydmFsKGFFdmVudCk7XG4gICAgfSk7XG5cbiAgICB0aGlzLm93bENhcm91c2VsLm93bENhcm91c2VsKHtcbiAgICAgIGxvb3A6IHRydWUsXG4gICAgICBtYXJnaW46IFNpZ25JbkZvcm0uX3NsaWRlc2hvd01hcmdpbixcbiAgICAgIHN0YWdlUGFkZGluZzogU2lnbkluRm9ybS5fc2xpZGVzaG93UGFkZGluZyxcbiAgICAgIGF1dG9wbGF5OiB0cnVlLFxuICAgICAgYXV0b3BsYXlUaW1lb3V0OiBTaWduSW5Gb3JtLl9zbGlkZXNob3dJbnRlcnZhbCxcbiAgICAgIHJlc3BvbnNpdmU6IGZhbHNlLFxuICAgICAgaXRlbXM6IDFcbiAgICB9KTtcblxuICAgICQoXCIub3dsLWl0ZW1cIikuY2xpY2soZnVuY3Rpb24oYUV2ZW50KSB7XG4gICAgICBTaWduSW5Gb3JtLl9zZXRDYXJvdXNlbFdhaXRJbnRlcnZhbChhRXZlbnQpO1xuICAgICAgU2lnbkluRm9ybS5fZ29Ub1NsaWRlKGFFdmVudCk7XG4gICAgICBFdmVudEFuYWx5dGljcy5wdXNoKHtcbiAgICAgICAga2V5OiBcIlNpZ25lZE91dEV4aXRcIixcbiAgICAgICAgYWN0aW9uOiBcIkNsaWNrQ2Fyb3VzZWxcIlxuICAgICAgfSk7XG4gICAgfSk7XG5cbiAgICAvL3JldGluYSBpbWFnZXNcbiAgICBpZiAoQnJvd3NlckhlbHBlci5pc1JldGluYURpc3BsYXkoKSkge1xuICAgICAgLy93ZSB3b3VsZCBuZWVkIHRvIGNoYW5nZSB0aGUgaW1hZ2VzIGZvciByZXRpbmEgZGlzcGxheVxuICAgICAgdmFyIGNhcm91c2VsSW1hZ2VzID0gJChcIi5zbGlkZXNob3ctaXRlbS1pbWFnZVwiKTtcbiAgICAgIHZhciBiYWNrZ3JvdW5kSW1hZ2U7XG4gICAgICAkLmVhY2goY2Fyb3VzZWxJbWFnZXMsIGZ1bmN0aW9uKGFJbmRleCwgYVZhbHVlKSB7XG4gICAgICAgIGJhY2tncm91bmRJbWFnZSA9ICQoYVZhbHVlKS5jc3MoJ2JhY2tncm91bmQtaW1hZ2UnKTtcbiAgICAgICAgYmFja2dyb3VuZEltYWdlID0gYmFja2dyb3VuZEltYWdlLnJlcGxhY2UoXCIucG5nXCIsIFwiQDJ4LnBuZ1wiKTtcbiAgICAgICAgJChhVmFsdWUpLmNzcygnYmFja2dyb3VuZC1pbWFnZScsIGJhY2tncm91bmRJbWFnZSk7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICAvL2xldCdzIHJlbW92ZSB0aGUgbmF2aWdhdGlvbiBjb250cm9scyAoUHJldiAvIE5leHQgYnV0dG9ucykgc28gc2NyZWVuIHJlYWRlcnMgZG9uJ3QgcmVhZCB0aGlzIHBhcnQuXG4gICAgJChcIi5vd2wtbmF2XCIpLnJlbW92ZSgpO1xuICB9LFxuXG4gIF9zZXRDYXJvdXNlbFdhaXRJbnRlcnZhbCA6IGZ1bmN0aW9uKGFFdmVudCkge1xuICAgIFNpZ25JbkZvcm0ub3dsQ2Fyb3VzZWwudHJpZ2dlcignc3RvcC5vd2wuYXV0b3BsYXknKTtcbiAgICAvL2FmdGVyIGNsaWNraW5nIG9uIGEgc2xpZGVzaG93IGltYWdlLCB3YWl0IDMwIHNlY29uZHMgYmVmb3JlIHJlc3VtaW5nIHRoZSBjYXJvdXNlbCBzbGlkZXNob3dcbiAgICBpZiAoIVNpZ25JbkZvcm0uX2Nhcm91c2VsQXV0b3BsYXlUaW1lb3V0KSB7XG4gICAgICBTaWduSW5Gb3JtLl9jYXJvdXNlbEF1dG9wbGF5VGltZW91dCA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICBTaWduSW5Gb3JtLm93bENhcm91c2VsLnRyaWdnZXIoJ3BsYXkub3dsLmF1dG9wbGF5Jyk7XG4gICAgICAgIGNsZWFyVGltZW91dChTaWduSW5Gb3JtLl9jYXJvdXNlbEF1dG9wbGF5VGltZW91dCk7XG4gICAgICAgIGRlbGV0ZSBTaWduSW5Gb3JtLl9jYXJvdXNlbEF1dG9wbGF5VGltZW91dDtcbiAgICAgIH0sIFNpZ25JbkZvcm0uX2FmdGVyQ2xpY2tDYXJvdXNlbEludGVydmFsLCBmYWxzZSk7XG4gICAgfVxuICB9LFxuXG4gIC8qKlxuICAgKiBPYnNlcnZlcyBmb3IgY2hhbmdlcy5cbiAgICogQHBhcmFtIGFUb3BpYyB0aGUgdG9waWMgbmFtZS5cbiAgICogQHBhcmFtIGFEYXRhIHRoZSBkYXRhIHNlbnQuXG4gICAqL1xuICBvYnNlcnZlIDogZnVuY3Rpb24oYVRvcGljLCBhRGF0YSkge1xuXG4gICAgc3dpdGNoIChhVG9waWMpIHtcbiAgICAgIGNhc2UgVG9waWNzLkFDQ09VTlRfU0lHTkVEX09VVDpcbiAgICAgICAgJChcIiNzaWduLWluXCIpLmxvYWQoXCJjb3JlL3NpZ25JbkZvcm0uaHRtbFwiLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICBTaWduSW5Gb3JtLmluaXQoKTtcbiAgICAgICAgfSk7XG4gICAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxufTtcblxuXG4kKHdpbmRvdykudW5sb2FkKGZ1bmN0aW9uKCkgeyBTaWduSW5Gb3JtLnVuaW5pdCgpOyB9KTtcbiJdfQ==