/*!
 * Copyright (C) 2007-2015 eBay Inc. All Rights Reserved.
 */
var MessagePanel = {
    _dismissTimeoutId: null,
    _delayInit: false,
    _TIMEOUT_DELETED_ITEMS: 8 * 1000,
    _TIMEOUT_BETA_ACTIONS: 30 * 1000,
    init: function () {
        this._addEventListeners();
        setTimeout(function () {
            this._delayInit = true;
            this._show();
        }.bind(this), 3000);
        ObserverHelper.addObserver(this, Topics.MESSAGE_PANEL_SHOW);
        ObserverHelper.addObserver(this, Topics.MESSAGE_PANEL_DISMISS);
    },
    uninit: function () {
        $("#message-panel-close-button-outer").unbind("click");
        $("#message-panel-message-body").unbind("click");
        var messagePanel = $("#message-panel");
        if (messagePanel.is(":visible")) {
            var messageObj = messagePanel.data("messageObject");
            MessagePanelService.dismissMessage(messageObj.type);
        }
        ObserverHelper.removeObserver(this, Topics.MESSAGE_PANEL_SHOW);
        ObserverHelper.removeObserver(this, Topics.MESSAGE_PANEL_DISMISS);
    },
    _addEventListeners: function () {
        $("#message-panel-message-body").click(function (aEvent) {
            if (aEvent.target.tagName.toLowerCase() == "a") {
                var data = $("#message-panel").data("messageObject");
                if ("url" in data) {
                    Site.openRawURL(data.url, aEvent);
                }
            }
        }.bind(this));
        $("#message-panel-action-button").click(function () {
            var messageObj = $("#message-panel").data("messageObject");
            if (messageObj.type == MessagePanelService.TYPE.ITEMS_DELETED) {
                switch (messageObj.data.itemType) {
                    case Item.TYPES.WATCHING:
                        PanelWatching.showDeletedItems();
                        break;
                    case Item.TYPES.WON:
                    case Item.TYPES.LOST:
                        PanelBuying.showDeletedItems();
                        break;
                    case Item.TYPES.SOLD:
                    case Item.TYPES.UNSOLD:
                        PanelSelling.showDeletedItems();
                        break;
                }
                this.dismiss();
            }
            else if (messageObj.type == MessagePanelService.TYPE.CONNECT_ERROR) {
                this.dismiss();
            }
        }.bind(this));
        $("#message-panel-close-button-outer").click(function () {
            this.dismiss();
        }.bind(this));
        $("#message-panel").hover(function () {
            this._clearDismissTimeout();
        }.bind(this), function () {
            this._setDismissTimeout();
        }.bind(this));
    },
    onTabChange: function () {
        if (this._delayInit) {
            this.dismiss(true);
        }
    },
    _clearDismissTimeout: function () {
        var panel = $("#message-panel");
        if (panel.is(":visible") && panel.data("messageObject").type ==
            MessagePanelService.TYPE.ITEMS_DELETED) {
            if (this._dismissTimeoutId) {
                clearTimeout(this._dismissTimeoutId);
                this._dismissTimeoutId = null;
            }
        }
    },
    _setDismissTimeout: function () {
        var panel = $("#message-panel");
        if (panel.is(":visible") && panel.data("messageObject").type ==
            MessagePanelService.TYPE.ITEMS_DELETED) {
            if (this._dismissTimeoutId) {
                clearTimeout(this._dismissTimeoutId);
            }
            this._dismissTimeoutId = setTimeout(function () {
                this._dismissTimeoutId = null;
                this.dismiss();
            }.bind(this), MessagePanel._TIMEOUT_DELETED_ITEMS);
        }
    },
    addMessage: function (aType, aObj) {
        MessagePanelService.addMessage(aType, aObj);
    },
    _show: function () {
        var messages = MessagePanelService.getMessages();
        if (messages.length === 0) {
            return;
        }
        var message = messages[0];
        var panel = $("#message-panel");
        if (panel.is(":visible") && panel.data("messageObject").type == message.type) {
            this._setDismissTimeout();
            return;
        }
        var messageBody = $("#message-panel-message-body");
        var actionButton = $("#message-panel-action-button-label");
        var dismissTime;
        var str;
        if (!panel.is(":visible")) {
            panel.slideDown("fast");
        }
        switch (message.type) {
            case MessagePanelService.TYPE.LEAVE_FEEDBACK:
                dismissTime = MessagePanel._TIMEOUT_BETA_ACTIONS;
                str = $.i18n.getString("message.leaveFeedback");
                message.url =
                    RoverUrlHelper.getUrl({ srcAreaName: "unwrappedLink", templateName: "appFeedback" });
                panel.removeClass("with-action-button");
                messageBody.append(this._convertStringToLink(str));
                panel.data("messageObject", message);
                break;
            case MessagePanelService.TYPE.BETA_APP_UPDATED:
                dismissTime = MessagePanel._TIMEOUT_BETA_ACTIONS;
                str = $.i18n.getString("message.betaAppUpdated");
                message.url =
                    RoverUrlHelper.getUrl({ srcAreaName: "unwrappedLink", templateName: "appFeedback" });
                panel.removeClass("with-action-button");
                messageBody.append(this._convertStringToLink(str));
                panel.data("messageObject", message);
                break;
            case MessagePanelService.TYPE.ITEMS_DELETED:
                dismissTime = MessagePanel._TIMEOUT_DELETED_ITEMS;
                var strKey = message.data.itemNum == 1 ? "message.itemDeleted.from" : "message.itemsDeleted.from";
                str = $.i18n.getString(strKey + message.data.itemType, [message.data.itemNum]);
                if (!panel.hasClass("with-action-button")) {
                    panel.addClass("with-action-button");
                }
                messageBody.text(str);
                panel.data("messageObject", message);
                actionButton.text($.i18n.getString("message.itemsDeleted.undo"));
                break;
            case MessagePanelService.TYPE.CONNECT_ERROR:
                str = $.i18n.getString("message.connectError");
                if (!panel.hasClass("with-action-button")) {
                    panel.addClass("with-action-button");
                }
                messageBody.text(str);
                panel.data("messageObject", message);
                actionButton.text($.i18n.getString("message.ok"));
                break;
        }
        if (dismissTime) {
            this._dismissTimeoutId = setTimeout(function () {
                this._dismissTimeoutId = null;
                this.dismiss();
            }.bind(this), dismissTime);
        }
    },
    _convertStringToLink: function (aString) {
        return aString.replace(/\[\d+ (.*?)\]/g, "<a href='#'>$1</a>");
    },
    dismiss: function (aTabChange, aSkipDeleting) {
        var panel = $("#message-panel");
        if (!panel.is(":visible")) {
            this._show();
            return;
        }
        var messageObj = panel.data("messageObject");
        var tabChangeDismissTypes = [
            MessagePanelService.TYPE.ITEMS_DELETED,
            MessagePanelService.TYPE.CONNECT_ERROR
        ];
        if (aTabChange && tabChangeDismissTypes.indexOf(messageObj.type) == -1) {
            return;
        }
        if (messageObj.type == MessagePanelService.TYPE.ITEMS_DELETED) {
            switch (messageObj.data.itemType) {
                case Item.TYPES.WATCHING:
                    if (!aSkipDeleting) {
                        PanelWatching.deleteItems();
                    }
                    break;
                case Item.TYPES.WON:
                case Item.TYPES.LOST:
                    PanelBuying.deleteItems();
                    break;
                case Item.TYPES.SOLD:
                case Item.TYPES.UNSOLD:
                    PanelSelling.deleteItems();
                    break;
            }
        }
        if (this._dismissTimeoutId) {
            clearTimeout(this._dismissTimeoutId);
            this._dismissTimeoutId = null;
        }
        MessagePanelService.dismissMessage(messageObj.type);
    },
    _hide: function () {
        if (MessagePanelService.getMessages().length > 0) {
            this._show();
        }
        else {
            var panel = $("#message-panel");
            if (panel.is(":visible")) {
                panel.slideUp("fast");
            }
        }
    },
    observe: function (aTopic, aData) {
        switch (aTopic) {
            case Topics.MESSAGE_PANEL_SHOW:
                if (this._delayInit) {
                    this._show();
                }
                break;
            case Topics.MESSAGE_PANEL_DISMISS:
                if (this._delayInit) {
                    this._hide();
                }
                break;
        }
    }
};
$(window).unload(function () { MessagePanel.uninit(); });
//# sourceMappingURL=data:application/json;base64,