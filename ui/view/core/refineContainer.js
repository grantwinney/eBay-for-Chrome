/*!
 * Copyright (C) 2007-2015 eBay Inc. All Rights Reserved.
 */
var RefineContainer = {
    _SORT_LISTS: {},
    _FILTER_LISTS: {},
    _currentListType: null,
    init: function () {
        this._SORT_LISTS[Item.TYPES.WATCHING] =
            { entries: [
                    { label: "refine.sortBy.timeEndingSoonest",
                        key: TradingApi.SORT.END_TIME },
                    { label: "refine.sortBy.priceLowest",
                        key: TradingApi.SORT.CURRENT_PRICE },
                    { label: "refine.sortBy.priceHighest",
                        key: TradingApi.SORT.CURRENT_PRICE_DESC }
                ], defaultKey: TradingApi.SORT.END_TIME };
        this._SORT_LISTS[Item.TYPES.BEST_OFFER] =
            { entries: [
                    { label: "refine.sortBy.offerStatus",
                        key: TradingApi.SORT.BEST_OFFER },
                    { label: "refine.sortBy.timeEndingSoonest",
                        key: TradingApi.SORT.END_TIME },
                    { label: "refine.sortBy.priceLowest",
                        key: TradingApi.SORT.CURRENT_PRICE },
                    { label: "refine.sortBy.priceHighest",
                        key: TradingApi.SORT.CURRENT_PRICE_DESC }
                ], defaultKey: TradingApi.SORT.END_TIME };
        this._SORT_LISTS[Item.TYPES.LOST] =
            { entries: [
                    { label: "refine.sortBy.timeEndedRecentFirst",
                        key: TradingApi.SORT.END_TIME_DESC },
                    { label: "refine.sortBy.timeEndedRecentLast",
                        key: TradingApi.SORT.END_TIME },
                    { label: "refine.sortBy.priceLowest",
                        key: TradingApi.SORT.CURRENT_PRICE },
                    { label: "refine.sortBy.priceHighest",
                        key: TradingApi.SORT.CURRENT_PRICE_DESC }
                ], defaultKey: TradingApi.SORT.END_TIME_DESC };
        this._SORT_LISTS[Item.TYPES.SELLING] =
            { entries: [
                    { label: "refine.sortBy.timeLeftEndingSoonest",
                        key: TradingApi.SORT.END_TIME },
                    { label: "refine.sortBy.timeLeftNewlyListed",
                        key: TradingApi.SORT.START_TIME_DESC },
                    { label: "refine.sortBy.priceLowest",
                        key: TradingApi.SORT.CURRENT_PRICE },
                    { label: "refine.sortBy.priceHighest",
                        key: TradingApi.SORT.CURRENT_PRICE_DESC },
                    { label: "refine.sortBy.watchersLowest",
                        key: TradingApi.SORT.WATCH_COUNT },
                    { label: "refine.sortBy.watchersHighest",
                        key: TradingApi.SORT.WATCH_COUNT_DESC }
                ], defaultKey: TradingApi.SORT.END_TIME };
        this._SORT_LISTS[Item.TYPES.SOLD] =
            { entries: [
                    { label: "refine.sortBy.timeEndedRecentFirst",
                        key: TradingApi.SORT.END_TIME_DESC },
                    { label: "refine.sortBy.timeEndedRecentLast",
                        key: TradingApi.SORT.END_TIME },
                    { label: "refine.sortBy.priceLowest",
                        key: TradingApi.SORT.CURRENT_PRICE },
                    { label: "refine.sortBy.priceHighest",
                        key: TradingApi.SORT.CURRENT_PRICE_DESC }
                ], defaultKey: TradingApi.SORT.END_TIME_DESC };
        this._SORT_LISTS[Item.TYPES.UNSOLD] =
            { entries: [
                    { label: "refine.sortBy.timeEndedRecentFirst",
                        key: TradingApi.SORT.END_TIME_DESC },
                    { label: "refine.sortBy.timeEndedRecentLast",
                        key: TradingApi.SORT.END_TIME }
                ], defaultKey: TradingApi.SORT.END_TIME_DESC };
        this._FILTER_LISTS[Item.TYPES.SOLD] =
            { entries: [
                    { label: "refine.filterBy.all",
                        key: MyEbayService.FILTER.ALL },
                    { label: "refine.filterBy.notPaid",
                        key: MyEbayService.FILTER.AWAITING_PAYMENT },
                    { label: "refine.filterBy.awaitingShipment",
                        key: MyEbayService.FILTER.AWAITING_SHIPMENT },
                    { label: "refine.filterBy.shipped",
                        key: MyEbayService.FILTER.PAID_AND_SHIPPED }
                ], defaultKey: MyEbayService.FILTER.ALL };
        this._addEventListeners();
        Sidebar.styleScroll("refine-main");
    },
    uninit: function () {
    },
    _addEventListeners: function () {
        $("#refine-cancel").click(function (aEvent) {
            aEvent.preventDefault();
            var eventLabel = Sidebar.getGAListTypeTrackingName(this._currentListType);
            EventAnalytics.push({
                key: "SignedInInternal",
                action: "ClickRefineCancel",
                label: eventLabel
            });
            this.hide();
            SearchBox.showSearchContent(false);
        }.bind(this));
        $("#refine-apply").click(function () {
            var eventLabel = Sidebar.getGAListTypeTrackingName(this._currentListType);
            EventAnalytics.push({
                key: "SignedInInternal",
                action: "ClickRefineApply",
                label: eventLabel
            });
            Sidebar.scrollToTop("panels");
            this._apply();
            this.hide();
        }.bind(this));
        $("#refine-reset").click(function () {
            var eventLabel = Sidebar.getGAListTypeTrackingName(this._currentListType);
            EventAnalytics.push({
                key: "SignedInInternal",
                action: "ClickRefineReset",
                label: eventLabel
            });
            Sidebar.scrollToTop("panels");
            this._reset();
            this.hide();
        }.bind(this));
        setTimeout(function () {
            $(".item-list-edit, .item-list-refine").click(function (aEvent) {
                $("#search-textbox").attr("tabindex", "-1");
            }.bind(this));
            $(".item-list-edit-cancel, #refine-cancel").click(function (aEvent) {
                $("#search-textbox").attr("tabindex", "0");
                $(".tab-item.active").focus();
            }.bind(this));
        }, 1000);
    },
    _createItem: function (aEntryObject, aSelected, aExtraInfo) {
        var checkedClass = aSelected ? 'checked="checked"' : "";
        var disabledClass = "";
        var countText = "";
        if (aExtraInfo && "count" in aExtraInfo) {
            countText = " (" + aExtraInfo.count + ")";
            if (aExtraInfo.count === 0 && aEntryObject.key != MyEbayService.FILTER.ALL) {
                disabledClass = 'disabled="true"';
            }
        }
        var refineType = (aExtraInfo && "refineType" in aExtraInfo) ? aExtraInfo.refineType : "";
        var boxLabel = $.i18n.getString(aEntryObject.label) + countText;
        var boxLabelForHTML = boxLabel.replace(/ /ig, '-');
        var boxString = '<div class="refine-item-container">' +
            '<div class="refine-item">' +
            '<label for="' + boxLabelForHTML + '" class="refine-item-title">' +
            '<input id="' + boxLabelForHTML + '" type="radio" name="' + refineType + '" value="' +
            boxLabelForHTML + '" class="refine-item-radio" ' + checkedClass + ' ' + disabledClass + ' />' +
            '<span>' + boxLabel + '</span>' +
            '</label>' +
            '</div>' +
            '</div>';
        var box = $(boxString);
        box.data("entryObject", { key: aEntryObject.key });
        return box;
    },
    _updatePanel: function (aType) {
        this._currentListType = aType;
        var refineKeys = this._getRefineKeys();
        var list;
        var entries;
        var defaultKey;
        var storedKey;
        var selectedKey;
        var i;
        var sortHeader = $(".refine-sort-by-header");
        var container = $("#refine-sort-by-list");
        container.empty();
        if (aType in this._SORT_LISTS) {
            list = this._SORT_LISTS[aType];
            entries = list.entries;
            defaultKey = list.defaultKey;
            storedKey = refineKeys.sort;
            selectedKey = storedKey ? storedKey : defaultKey;
            for (i = 0; i < entries.length; i++) {
                container.append(this._createItem(entries[i], entries[i].key == selectedKey, { refineType: "refine-sort" }));
            }
            sortHeader.show();
        }
        else {
            sortHeader.hide();
        }
        var filterHeader = $(".refine-filter-by-header");
        container = $("#refine-filter-by-list");
        container.empty();
        if (aType in this._FILTER_LISTS) {
            list = this._FILTER_LISTS[aType];
            entries = list.entries;
            defaultKey = list.defaultKey;
            storedKey = refineKeys.filter;
            selectedKey = storedKey ? storedKey : defaultKey;
            var summary;
            for (i = 0; i < entries.length; i++) {
                summary = MyEbayService.getFilterSummary(entries[i].key);
                container.append(this._createItem(entries[i], entries[i].key == selectedKey, { count: summary.count, refineType: "refine-filter" }));
            }
            filterHeader.show();
        }
        else {
            filterHeader.hide();
        }
    },
    show: function (aType) {
        this._updatePanel(aType);
        $("#refine-content").slideDown("fast");
        setTimeout(function () { Sidebar.hideOnlineOfflineContainers(); }, 300);
    },
    hide: function () {
        $("#refine-content").slideUp("fast");
        Sidebar.setOnlineState();
        PanelContainer.resetDockHeader();
    },
    _getRefineKeys: function () {
        var keys = {};
        var listName;
        switch (this._currentListType) {
            case Item.TYPES.WATCHING:
                listName = TradingApi.WATCH_LIST;
                break;
            case Item.TYPES.BIDDING:
                listName = TradingApi.BID_LIST;
                break;
            case Item.TYPES.WON:
                listName = TradingApi.WON_LIST;
                break;
            case Item.TYPES.LOST:
                listName = TradingApi.LOST_LIST;
                break;
            case Item.TYPES.BEST_OFFER:
                listName = TradingApi.BEST_OFFER_LIST;
                break;
            case Item.TYPES.SELLING:
                listName = TradingApi.ACTIVE_LIST;
                break;
            case Item.TYPES.SOLD:
                listName = TradingApi.SOLD_LIST;
                break;
            case Item.TYPES.UNSOLD:
                listName = TradingApi.UNSOLD_LIST;
                break;
            case Item.TYPES.SCHEDULED:
                listName = TradingApi.SCHEDULED_LIST;
                break;
        }
        if (listName) {
            keys = MyEbayService.getRefine(listName);
        }
        return keys;
    },
    _applyRefineKeys: function (aObject) {
        var listName;
        switch (this._currentListType) {
            case Item.TYPES.WATCHING:
                listName = TradingApi.WATCH_LIST;
                MyEbayService.setRefine(listName, aObject);
                MyEbayService.loadBuyingListData({
                    name: listName
                });
                break;
            case Item.TYPES.WON:
                listName = TradingApi.WON_LIST;
                MyEbayService.setRefine(listName, aObject);
                MyEbayService.loadBuyingListData({
                    name: listName,
                    entriesPerPage: MyEbayService.LIST_ITEM_BATCH_SIZE
                });
                break;
            case Item.TYPES.LOST:
                listName = TradingApi.LOST_LIST;
                MyEbayService.setRefine(listName, aObject);
                MyEbayService.loadBuyingListData({
                    name: listName,
                    entriesPerPage: MyEbayService.LIST_ITEM_BATCH_SIZE
                });
                break;
            case Item.TYPES.BEST_OFFER:
                listName = TradingApi.BEST_OFFER_LIST;
                MyEbayService.setRefine(listName, aObject);
                MyEbayService.loadBuyingListData({
                    name: listName,
                    entriesPerPage: MyEbayService.LIST_ITEM_BATCH_SIZE
                });
                break;
            case Item.TYPES.SELLING:
                listName = TradingApi.ACTIVE_LIST;
                MyEbayService.setRefine(listName, aObject);
                MyEbayService.loadSellingListData({
                    name: listName,
                    entriesPerPage: MyEbayService.LIST_ITEM_BATCH_SIZE
                });
                break;
            case Item.TYPES.SOLD:
                listName = TradingApi.SOLD_LIST;
                MyEbayService.setRefine(listName, aObject);
                MyEbayService.loadSellingListData({
                    name: listName,
                    entriesPerPage: MyEbayService.LIST_ITEM_BATCH_SIZE
                });
                break;
            case Item.TYPES.UNSOLD:
                listName = TradingApi.UNSOLD_LIST;
                MyEbayService.setRefine(listName, aObject);
                MyEbayService.loadSellingListData({
                    name: listName,
                    entriesPerPage: MyEbayService.LIST_ITEM_BATCH_SIZE
                });
                break;
        }
    },
    _apply: function () {
        var applyObj = {};
        var parents = null;
        var key = null;
        var sortKeyElement = $("#refine-sort-by-list input[type='radio']:checked");
        if (0 < sortKeyElement.length) {
            parents = $(sortKeyElement).parents(".refine-item-container");
            if (0 < parents.length) {
                key = $(parents[0]).data("entryObject").key;
                if (key) {
                    applyObj.sort = key;
                }
            }
        }
        parent = null;
        key = null;
        var filterKeyElement = $("#refine-filter-by-list input[type='radio']:checked");
        if (0 < filterKeyElement.length) {
            parents = $(filterKeyElement).parents(".refine-item-container");
            if (0 < parents.length) {
                key = $(parents[0]).data("entryObject").key;
                if (key) {
                    applyObj.filter = key;
                }
            }
        }
        this._applyRefineKeys(applyObj);
    },
    _reset: function () {
        this._applyRefineKeys({ sort: null, filter: null });
    }
};
$(window).unload(function () { RefineContainer.uninit(); });
//# sourceMappingURL=data:application/json;base64,