/*!
 * Copyright (C) 2007-2015 eBay Inc. All Rights Reserved.
 */
function Account(aUserId) {
    if (typeof aUserId !== "undefined") {
        this._init(aUserId);
    }
}
Account.SCHEMA = {
    NAME: "Account",
    PROPERTIES: {
        "email": { type: "string", xml: "Email" },
        "userId": { type: "string", xml: "UserID" },
        "token": { type: "string", xml: "" },
        "registrationSite": { type: "string", xml: "RegistrationSite" },
        "shippingCountry": { type: "string", xml: "" },
        "feedbackRating": { type: "number", xml: "FeedbackScore" },
        "numUnreadMessages": { type: "number", xml: "" },
        "avatarImage": { type: "string", xml: "" },
        "name": { type: "string", xml: "" }
    }
};
Account.prototype = {
    name: Account.SCHEMA.NAME,
    _init: function (aUserId) {
        this.set("userId", aUserId);
    },
    get: function (aProperty) {
        if (!Account.SCHEMA.PROPERTIES.hasOwnProperty(aProperty)) {
            throw "Account doesn't have property " + aProperty;
        }
        var account;
        if (typeof this["_" + aProperty] === "undefined" || this["_" + aProperty] === null) {
            account = PropertyDAO.get(PropertyDAO.PROP_ACTIVE_ACCOUNT);
            this["_" + aProperty] = account ? account[aProperty] : null;
        }
        return this["_" + aProperty];
    },
    set: function (aProperty, aValue) {
        if (!Account.SCHEMA.PROPERTIES.hasOwnProperty(aProperty)) {
            throw "Account doesn't have property " + aProperty;
        }
        var account;
        var typedValue;
        var type = Account.SCHEMA.PROPERTIES[aProperty].type;
        typedValue = ObjectHelper.getTypedValue(type, aValue);
        this["_" + aProperty] = typedValue;
        account = PropertyDAO.get(PropertyDAO.PROP_ACTIVE_ACCOUNT);
        account = account || {};
        account[aProperty] = typedValue;
        PropertyDAO.set(PropertyDAO.PROP_ACTIVE_ACCOUNT, account);
    },
    delete: function () {
        var prop;
        for (prop in Account.SCHEMA.PROPERTIES) {
            this["_" + prop] = null;
        }
        PropertyDAO.remove(PropertyDAO.PROP_ACTIVE_ACCOUNT);
    }
};
Account.getAccount = function () {
    var account;
    account = new this();
    if (typeof account.get("userId") !== "undefined" &&
        account.get("userId") !== null) {
        return account;
    }
    else {
        return null;
    }
};
//# sourceMappingURL=data:application/json;base64,