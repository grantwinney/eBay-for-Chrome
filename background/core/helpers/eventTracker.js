/*!
 * Copyright (C) 2007-2015 eBay Inc. All Rights Reserved.
 */
function EventTracker(aName) {
    if (aName) {
        this._name = aName;
    }
    else {
        this._name = "UnnamedEventTracker";
    }
    this._lastEventIndex = -1;
    this._events = {};
    this._eventErrors = 0;
    this._whenAllFinished = null;
}
EventTracker.prototype = {
    doWhenAllFinished: function (aCallback) {
        this._whenAllFinished = aCallback;
    },
    failRemainingEvents: function () {
        var that = this;
        if (this.numPendingEvents() <= 0) {
            if (this._whenAllFinished) {
                try {
                    this._whenAllFinished(this._eventErrors);
                }
                catch (e) {
                    Logger.error("EventTracker.failRemainingEvents Error: " + e.message +
                        "/" + this._name);
                }
            }
        }
        else {
            $.each(this._events, function (aIndex) {
                that._remove(aIndex, true);
            });
        }
    },
    addRequest: function (aRequest) {
        if (aRequest === null) {
            return;
        }
        var eventIndex = ++this._lastEventIndex;
        this._events[eventIndex] = true;
        aRequest.done(function () {
            new Timer(function () { this._remove(eventIndex, false); }.bind(this), 50);
        }.bind(this));
        aRequest.fail(function () {
            this.failRemainingEvents();
        }.bind(this));
        return eventIndex;
    },
    addCallbackEvent: function () {
        var that = this;
        var eventIndex = ++this._lastEventIndex;
        this._events[eventIndex] = function (aError) {
            that._remove(eventIndex, aError);
        };
        return this._events[eventIndex];
    },
    _remove: function (aEventIndex, aError) {
        if (!this._events[aEventIndex]) {
            Logger.warn("Attempt to remove event " + aEventIndex +
                " from tracker \"" + this._name + "\"" +
                ", but that event does not exist.");
            return;
        }
        if (aError) {
            this._eventErrors++;
        }
        delete this._events[aEventIndex];
        if (this.numPendingEvents() <= 0) {
            if (this._whenAllFinished) {
                try {
                    this._whenAllFinished(this._eventErrors);
                }
                catch (e) {
                    Logger.error("EventTracker._remove Error: " + e.message +
                        "/" + this._name);
                }
            }
        }
    },
    numPendingEvents: function () {
        var num = 0;
        $.each(this._events, function () { num++; });
        return num;
    }
};
//# sourceMappingURL=data:application/json;base64,