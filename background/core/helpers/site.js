var Site = {
    openRawURL: function (url, event, forceNewTab) {
        if (event) {
            event.preventDefault();
        }
        if (forceNewTab) {
            UtilityHelper.openLinkIn(url, "tab");
        }
        else {
            var where = UtilityHelper.findWhereToOpenLink(event);
            UtilityHelper.openLinkIn(url, where);
        }
    },
    findSiteBy: function (property, value) {
        var site = null;
        _.each(Configs.SUPPORTED_SITES_DATA, function (currentSite) {
            if (currentSite[property] === value) {
                site = currentSite;
            }
        });
        return site;
    },
    siteDataForSite: function (siteName) {
        return _.get(Configs.SUPPORTED_SITES_DATA, siteName, Configs.SUPPORTED_SITES_DATA["US"]);
    },
    siteDataForCountries: function (siteName) {
        return _.get(Configs.ALL_COUNTRIES_DATA, siteName, Configs.ALL_COUNTRIES_DATA["US"]);
    },
    siteIdForSite: function (siteName) {
        return this.siteDataForCountries(siteName).num;
    },
    siteForLocale: function (locale) {
        var site;
        var lcLocale = locale.toLowerCase();
        site = this.findSiteBy("locale", lcLocale);
        if (!site) {
            var shortLocale = lcLocale.split("-")[0];
            site = this.findSiteBy("locale", shortLocale);
        }
        if (!site) {
            site = Configs.SUPPORTED_SITES_DATA["US"];
        }
        return site;
    },
    getDealsDomain: function () {
        var dealsDomain = "ebay.com";
        var homeSite = this.getHomeSite();
        var siteData = this.siteDataForSite(homeSite);
        if (siteData.eBayDeals) {
            dealsDomain = siteData.domain;
        }
        return dealsDomain;
    },
    siteHasDeals: function () {
        var hasDeals = false;
        var homeSite = this.getHomeSite();
        var siteData = Configs.SUPPORTED_SITES_DATA[homeSite];
        if (siteData) {
            hasDeals = siteData.eBayDeals;
        }
        return hasDeals;
    },
    isSupportedSite: function () {
        var isSupportedSite = false;
        var homeSite = this.getHomeSite();
        if (Configs.SUPPORTED_SITES_DATA[homeSite]) {
            isSupportedSite = true;
        }
        return isSupportedSite;
    },
    addCurrencySymbol: function (value, currency) {
        var homeSite = this.getHomeSite();
        var siteData = this.siteDataForSite(homeSite);
        var nativeCurrency = siteData.currency;
        var ret;
        if (currency === nativeCurrency) {
            var node = document.createElement("div");
            var symbol = void 0;
            node.innerHTML = siteData.currencySymbol;
            symbol = node.innerHTML;
            ret = symbol.replace("*", value);
        }
        else {
            ret = currency + " " + value;
        }
        return ret;
    },
    getGlobalId: function () {
        var globalId;
        var homeSite = this.getHomeSite();
        var site = this.findSiteBy("name", homeSite);
        if (site) {
            globalId = site.globalId;
        }
        else {
            globalId = "EBAY-US";
        }
        return globalId;
    },
    canDisplaySurvey: function (chosenSite) {
        var canDisplaySurvey = false;
        var allowedCountries = ["Australia", "Canada", "US", "UK"];
        if (UtilityHelper.getBrowserLanguage().indexOf("en") === 0 &&
            _.includes(allowedCountries, chosenSite)) {
            canDisplaySurvey = true;
        }
        return canDisplaySurvey;
    },
    flagForSite: function (countryName) {
        var flagName;
        var country = Configs.ALL_COUNTRIES_DATA[countryName];
        if (country) {
            var iso = country.iso.toLowerCase();
            if (BrowserHelper.isRetinaDisplay()) {
                flagName = iso + "-flag@2x.png";
            }
            else {
                flagName = iso + "-flag.png";
            }
        }
        return Configs.FLAGS_LOCATION + flagName;
    },
    getRedirectUrl: function (callback, firstRun) {
        var site = null;
        var templateName = "homePage";
        if (firstRun) {
            templateName = "firstRun";
        }
        var redirect = function (site) {
            var url = RoverUrlHelper.getUrl({
                srcAreaName: "postSignIn",
                templateName: templateName,
                args: { domain: site.domain }
            });
            callback(url);
        };
        var getSite = function (isoCountryCode) {
            if (!_.has(isoCountryCode, "message")) {
                site = Site.findSiteBy("iso", isoCountryCode);
            }
            if (!site) {
                site = Site.siteForLocale(UtilityHelper.getBrowserLanguage());
            }
            if (!site) {
                site = Configs.SUPPORTED_SITES_DATA["US"];
            }
            redirect(site);
        };
        var account = Account.getAccount();
        if (account) {
            var shippingCountry = account.get("shippingCountry");
            if (shippingCountry) {
                site = Site.findSiteBy("iso", shippingCountry);
            }
            if (!site) {
                site = Site.findSiteBy("name", account.get("registrationSite"));
            }
        }
        if (site) {
            redirect(site);
        }
        else {
            AuthenticationService.getApplicationToken(function (token) {
                Location.getLocation(token, Configs)
                    .then(getSite)
                    .catch(function (reason) {
                    console.log(reason);
                });
            });
        }
    },
    getHomeSite: function (includeUnsitedCountry) {
        var siteName = PropertyDAO.get(PropertyDAO.PROP_CHOSEN_SITE);
        if (!siteName) {
            var account_1 = Account.getAccount();
            if (account_1) {
                var shippingCountry = account_1.get("shippingCountry");
                if (shippingCountry) {
                    siteName = this.findSiteBy("iso", shippingCountry).name;
                }
                if (!siteName) {
                    siteName = account_1.get("registrationSite");
                }
            }
            if (!siteName || !Configs.SUPPORTED_SITES_DATA[siteName]) {
                siteName = this.siteForLocale(UtilityHelper.getBrowserLanguage()).name;
            }
        }
        if (!siteName) {
            siteName = "US";
        }
        else {
            if (includeUnsitedCountry) {
                if (!Configs.ALL_COUNTRIES_DATA[siteName]) {
                    siteName = "US";
                }
            }
            else if (!Configs.SUPPORTED_SITES_DATA[siteName]) {
                siteName = "US";
            }
        }
        return siteName;
    }
};
//# sourceMappingURL=data:application/json;base64,