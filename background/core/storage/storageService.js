/*!
 * Copyright (C) 2007-2015 eBay Inc. All Rights Reserved.
 */
var StorageService = {
    _db: null,
    _databaseName: "ebay",
    _databaseVersion: 4,
    _init: function () {
        var indexedDB;
        var request;
        var that = this;
        if (Configs.BROWSER === "sf") {
            indexedDB = window.shimIndexedDB;
        }
        else {
            indexedDB = window.indexedDB;
        }
        request = indexedDB.open(StorageService._databaseName, StorageService._databaseVersion);
        request.onerror = this._onError;
        request.onsuccess = function (aEvent) {
            var storeName = "accounts";
            that._db = aEvent.target.result;
            try {
                var store = that._db.transaction([storeName], "readonly").objectStore(storeName);
                var request = store.openCursor();
                request.onsuccess = that._migrateAccount;
            }
            catch (e) {
                console.log("Account Migration: No database present. Moving on...");
            }
        };
    },
    _onError: function (aError) {
        console.log(aError.message);
    },
    _migrateAccount: function (aEvent) {
        var account;
        var accountJSON;
        var cursor = aEvent.target.result;
        if (cursor) {
            if (cursor.value) {
                console.log("Account Migration: We have an account in indexedDB!");
                accountJSON = cursor.value;
                if (Account.getAccount()) {
                    console.log("Account Migration: Found account in localStorage. Moving on...");
                }
                else {
                    account = new Account(accountJSON["userId"]);
                    ObjectHelper.updateWithJSON(account, accountJSON, Account.SCHEMA);
                    console.log("Account Migration: Migrated account!");
                    StorageService._db.close();
                    indexedDB.deleteDatabase(StorageService._databaseName);
                    console.log("Account Migration: Deleted database!");
                }
            }
        }
        else {
            console.log("Account Migration: No cursor received!");
        }
    }
};
(function () { this._init(); }).apply(StorageService);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RvcmFnZVNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9iYWNrZ3JvdW5kL2NvcmUvc3RvcmFnZS9zdG9yYWdlU2VydmljZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7R0FFRztBQWNILElBQUksY0FBYyxHQUFHO0lBQ25CLEdBQUcsRUFBRSxJQUFJO0lBQ1QsYUFBYSxFQUFFLE1BQU07SUFDckIsZ0JBQWdCLEVBQUcsQ0FBQztJQUVwQixLQUFLLEVBQUc7UUFFTixJQUFJLFNBQVMsQ0FBQztRQUNkLElBQUksT0FBTyxDQUFDO1FBQ1osSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBR2hCLEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxPQUFPLEtBQUssSUFBSSxDQUFDLENBQUMsQ0FBQztZQUM3QixTQUFTLEdBQUcsTUFBTSxDQUFDLGFBQWEsQ0FBQztRQUNuQyxDQUFDO1FBQUMsSUFBSSxDQUFDLENBQUM7WUFDTixTQUFTLEdBQUcsTUFBTSxDQUFDLFNBQVMsQ0FBQztRQUMvQixDQUFDO1FBQ0QsT0FBTyxHQUFHLFNBQVMsQ0FBQyxJQUFJLENBQ3RCLGNBQWMsQ0FBQyxhQUFhLEVBQzVCLGNBQWMsQ0FBQyxnQkFBZ0IsQ0FDaEMsQ0FBQztRQUVGLE9BQU8sQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQztRQUNoQyxPQUFPLENBQUMsU0FBUyxHQUFHLFVBQVMsTUFBTTtZQUNqQyxJQUFJLFNBQVMsR0FBRyxVQUFVLENBQUM7WUFDM0IsSUFBSSxDQUFDLEdBQUcsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQztZQUNoQyxJQUFJLENBQUM7Z0JBQ0gsSUFBSSxLQUFLLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsQ0FBQyxTQUFTLENBQUMsRUFBRSxVQUFVLENBQUMsQ0FBQyxXQUFXLENBQUMsU0FBUyxDQUFDLENBQUM7Z0JBQ2pGLElBQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxVQUFVLEVBQUUsQ0FBQztnQkFDakMsT0FBTyxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFDO1lBQzNDLENBQUM7WUFBQyxLQUFLLENBQUEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUNWLE9BQU8sQ0FBQyxHQUFHLENBQUMsc0RBQXNELENBQUMsQ0FBQztZQUN0RSxDQUFDO1FBQ0gsQ0FBQyxDQUFDO0lBQ0osQ0FBQztJQUVELFFBQVEsRUFBRyxVQUFTLE1BQU07UUFDeEIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDOUIsQ0FBQztJQUVELGVBQWUsRUFBRSxVQUFTLE1BQU07UUFDOUIsSUFBSSxPQUFPLENBQUM7UUFDWixJQUFJLFdBQVcsQ0FBQztRQUNoQixJQUFJLE1BQU0sR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQztRQUVsQyxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO1lBQ1gsRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7Z0JBQ2pCLE9BQU8sQ0FBQyxHQUFHLENBQUMscURBQXFELENBQUMsQ0FBQztnQkFDbkUsV0FBVyxHQUFHLE1BQU0sQ0FBQyxLQUFLLENBQUM7Z0JBRzNCLEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxVQUFVLEVBQUUsQ0FBQyxDQUFDLENBQUM7b0JBQ3pCLE9BQU8sQ0FBQyxHQUFHLENBQUMsZ0VBQWdFLENBQUMsQ0FBQztnQkFDaEYsQ0FBQztnQkFBQyxJQUFJLENBQUMsQ0FBQztvQkFDTixPQUFPLEdBQUcsSUFBSSxPQUFPLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7b0JBSTdDLFlBQVksQ0FBQyxjQUFjLENBQUMsT0FBTyxFQUFFLFdBQVcsRUFBRSxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7b0JBQ2xFLE9BQU8sQ0FBQyxHQUFHLENBQUMsc0NBQXNDLENBQUMsQ0FBQztvQkFHcEQsY0FBYyxDQUFDLEdBQUcsQ0FBQyxLQUFLLEVBQUUsQ0FBQztvQkFDM0IsU0FBUyxDQUFDLGNBQWMsQ0FBQyxjQUFjLENBQUMsYUFBYSxDQUFDLENBQUM7b0JBQ3ZELE9BQU8sQ0FBQyxHQUFHLENBQUMsc0NBQXNDLENBQUMsQ0FBQztnQkFDdEQsQ0FBQztZQUNILENBQUM7UUFDSCxDQUFDO1FBQUMsSUFBSSxDQUFDLENBQUM7WUFDTixPQUFPLENBQUMsR0FBRyxDQUFDLHdDQUF3QyxDQUFDLENBQUM7UUFDeEQsQ0FBQztJQUNILENBQUM7Q0FDRixDQUFDO0FBRUYsQ0FBQyxjQUFhLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxjQUFjLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQ29weXJpZ2h0IChDKSAyMDA3LTIwMTUgZUJheSBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKi9cblxuLypcbiAgdmFyIENvbmZpZ3MgPSByZXF1aXJlKFwiY29yZS9jb25maWdzL2luaXRcIikuQ29uZmlncztcbiAgdmFyIE9iamVjdEhlbHBlciA9IHJlcXVpcmUoXCJjb3JlL2hlbHBlcnMvb2JqZWN0SGVscGVyXCIpLk9iamVjdEhlbHBlcjtcbiAgdmFyIEFjY291bnQgPSByZXF1aXJlKFwiY29yZS9vYmplY3RzL2FjY291bnRcIikuQWNjb3VudDtcbiovXG5cbi8qKlxuICogU3RvcmFnZSBTZXJ2aWNlLlxuICogQmFzZWQgb24gaW5kZXhlZCBkYi5cbiAqIERFUFJFQ0FURUQuIFdJTEwgQkUgUkVNT1ZFRFxuICogVXNlZCB0byBtaWdyYXRlIHRoZSBhY2NvdW50IGZyb20gSW5kZXhlZERCIHRvIGxvY2FsU3RvcmFnZVxuICovXG52YXIgU3RvcmFnZVNlcnZpY2UgPSB7XG4gIF9kYjogbnVsbCxcbiAgX2RhdGFiYXNlTmFtZTogXCJlYmF5XCIsXG4gIF9kYXRhYmFzZVZlcnNpb24gOiA0LFxuXG4gIF9pbml0IDogZnVuY3Rpb24oKSB7XG5cbiAgICB2YXIgaW5kZXhlZERCO1xuICAgIHZhciByZXF1ZXN0O1xuICAgIHZhciB0aGF0ID0gdGhpcztcblxuICAgIC8vIEZvciBTYWZhcmkgd2UgbmVlZCB0byB1c2UgYSBcInNoaW1cIiB0byBtYWtlIHRoZSBEQiB3b3JrLlxuICAgIGlmIChDb25maWdzLkJST1dTRVIgPT09IFwic2ZcIikge1xuICAgICAgaW5kZXhlZERCID0gd2luZG93LnNoaW1JbmRleGVkREI7XG4gICAgfSBlbHNlIHtcbiAgICAgIGluZGV4ZWREQiA9IHdpbmRvdy5pbmRleGVkREI7XG4gICAgfVxuICAgIHJlcXVlc3QgPSBpbmRleGVkREIub3BlbihcbiAgICAgIFN0b3JhZ2VTZXJ2aWNlLl9kYXRhYmFzZU5hbWUsXG4gICAgICBTdG9yYWdlU2VydmljZS5fZGF0YWJhc2VWZXJzaW9uXG4gICAgKTtcblxuICAgIHJlcXVlc3Qub25lcnJvciA9IHRoaXMuX29uRXJyb3I7XG4gICAgcmVxdWVzdC5vbnN1Y2Nlc3MgPSBmdW5jdGlvbihhRXZlbnQpIHtcbiAgICAgIHZhciBzdG9yZU5hbWUgPSBcImFjY291bnRzXCI7XG4gICAgICB0aGF0Ll9kYiA9IGFFdmVudC50YXJnZXQucmVzdWx0O1xuICAgICAgdHJ5IHtcbiAgICAgICAgdmFyIHN0b3JlID0gdGhhdC5fZGIudHJhbnNhY3Rpb24oW3N0b3JlTmFtZV0sIFwicmVhZG9ubHlcIikub2JqZWN0U3RvcmUoc3RvcmVOYW1lKTtcbiAgICAgICAgdmFyIHJlcXVlc3QgPSBzdG9yZS5vcGVuQ3Vyc29yKCk7XG4gICAgICAgIHJlcXVlc3Qub25zdWNjZXNzID0gdGhhdC5fbWlncmF0ZUFjY291bnQ7XG4gICAgICB9IGNhdGNoKGUpIHtcbiAgICAgICAgY29uc29sZS5sb2coXCJBY2NvdW50IE1pZ3JhdGlvbjogTm8gZGF0YWJhc2UgcHJlc2VudC4gTW92aW5nIG9uLi4uXCIpO1xuICAgICAgfVxuICAgIH07XG4gIH0sXG5cbiAgX29uRXJyb3IgOiBmdW5jdGlvbihhRXJyb3IpIHtcbiAgICBjb25zb2xlLmxvZyhhRXJyb3IubWVzc2FnZSk7XG4gIH0sXG5cbiAgX21pZ3JhdGVBY2NvdW50OiBmdW5jdGlvbihhRXZlbnQpIHtcbiAgICB2YXIgYWNjb3VudDtcbiAgICB2YXIgYWNjb3VudEpTT047XG4gICAgdmFyIGN1cnNvciA9IGFFdmVudC50YXJnZXQucmVzdWx0O1xuXG4gICAgaWYgKGN1cnNvcikge1xuICAgICAgaWYgKGN1cnNvci52YWx1ZSkge1xuICAgICAgICBjb25zb2xlLmxvZyhcIkFjY291bnQgTWlncmF0aW9uOiBXZSBoYXZlIGFuIGFjY291bnQgaW4gaW5kZXhlZERCIVwiKTtcbiAgICAgICAgYWNjb3VudEpTT04gPSBjdXJzb3IudmFsdWU7XG5cbiAgICAgICAgLy8gV2UgY2hlY2sgaWYgd2UgYWxyZWFkeSBoYXZlIGFuIGFjY291bnQgaW4gbG9jYWxTdG9yYWdlXG4gICAgICAgIGlmIChBY2NvdW50LmdldEFjY291bnQoKSkge1xuICAgICAgICAgIGNvbnNvbGUubG9nKFwiQWNjb3VudCBNaWdyYXRpb246IEZvdW5kIGFjY291bnQgaW4gbG9jYWxTdG9yYWdlLiBNb3Zpbmcgb24uLi5cIik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgYWNjb3VudCA9IG5ldyBBY2NvdW50KGFjY291bnRKU09OW1widXNlcklkXCJdKTtcblxuICAgICAgICAgIC8vIHVwZGF0ZVdpdGhKU09OIHVzZXMgYWNjb3VudC5zZXQgd2hpY2ggYXV0b21hdGljYWxseSBzdG9yZXMgZWFjaFxuICAgICAgICAgIC8vIHByb3BlcnR5IGluIGxvY2FsU3RvcmFnZSwgc28gd2UgZG9uJ3QgbmVlZCB0byBkbyBhbnl0aGluZyBleHRyYVxuICAgICAgICAgIE9iamVjdEhlbHBlci51cGRhdGVXaXRoSlNPTihhY2NvdW50LCBhY2NvdW50SlNPTiwgQWNjb3VudC5TQ0hFTUEpO1xuICAgICAgICAgIGNvbnNvbGUubG9nKFwiQWNjb3VudCBNaWdyYXRpb246IE1pZ3JhdGVkIGFjY291bnQhXCIpO1xuXG4gICAgICAgICAgLy8gTm93IHdlIGRlbGV0ZSB0aGUgYmFzZVxuICAgICAgICAgIFN0b3JhZ2VTZXJ2aWNlLl9kYi5jbG9zZSgpO1xuICAgICAgICAgIGluZGV4ZWREQi5kZWxldGVEYXRhYmFzZShTdG9yYWdlU2VydmljZS5fZGF0YWJhc2VOYW1lKTtcbiAgICAgICAgICBjb25zb2xlLmxvZyhcIkFjY291bnQgTWlncmF0aW9uOiBEZWxldGVkIGRhdGFiYXNlIVwiKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBjb25zb2xlLmxvZyhcIkFjY291bnQgTWlncmF0aW9uOiBObyBjdXJzb3IgcmVjZWl2ZWQhXCIpO1xuICAgIH1cbiAgfVxufTtcblxuKGZ1bmN0aW9uKCkgeyB0aGlzLl9pbml0KCk7IH0pLmFwcGx5KFN0b3JhZ2VTZXJ2aWNlKTtcbiJdfQ==