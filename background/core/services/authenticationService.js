/*!
 * Copyright (C) 2007-2015 eBay Inc. All Rights Reserved.
 */
var Authentication = ebay.apis.authentication;
var Location = ebay.apis.location;
var AuthenticationService = {
    _RE_EBAY_LOVE_TOKEN: /access_token=(.*?)"/i,
    _applicationToken: null,
    defaultDomain: "ebay.com",
    init: function () {
    },
    get applicationToken() {
        return this._applicationToken;
    },
    set applicationToken(aValue) {
        this._applicationToken = aValue;
    },
    getUserTokenUrl: function (aSourceArea, aCallback) {
        var parameters = {};
        parameters.sourceArea = aSourceArea;
        var url = AuthenticationApi.getAuthenticationUrl("oauthUserToken", parameters);
        if (aCallback) {
            aCallback(url);
        }
    },
    getApplicationToken: function (aCallback) {
        var that = this;
        var setApplicationToken = function (token) {
            if (token.access_token) {
                that.applicationToken = token;
            }
            if (aCallback) {
                aCallback(that.applicationToken);
            }
        };
        Authentication.getApplicationToken(Configs)
            .then(setApplicationToken)
            .catch(function (reason) {
            console.log(reason);
        });
    },
    getEbayLoveToken: function (aCallback, aParameters) {
        var action;
        var handleToken = function (tokenResponse) {
            if (tokenResponse.access_token) {
                console.log("*** GOT TOKEN. BEGIN AUTO SIGN IN ***");
                if (PropertyDAO.get(PropertyDAO.PROP_FIRST_SIGNIN)) {
                    action = "SignInAuto";
                }
                else {
                    action = "FirstSignInAuto";
                }
                EventAnalytics.push({
                    key: "Acquisition",
                    action: action
                });
                AccountService.setUserToken(tokenResponse.access_token, aCallback);
            }
            else {
                console.log("*** COULD NOT GET TOKEN FOR AUTO SIGN IN ***");
                if (aCallback) {
                    aCallback();
                }
            }
        };
        var site = Site.siteDataForSite(Site.getHomeSite());
        Authentication.getEbayLoveToken(site, Configs)
            .then(handleToken)
            .catch(function (reason) {
            console.log(reason);
        });
    },
    autoSignInUser: function () {
        var parameters = {};
        var localCallback = function () {
            AuthenticationService.callEbayLoveWithDefaultDomain();
        };
        var getIsoCountryCode = function (isoCountryCode) {
            if (_.has(isoCountryCode, "message")) {
                AuthenticationService.callEbayLoveWithDefaultDomain();
            }
            else {
                var site = Site.findSiteBy("iso", isoCountryCode);
                if (!site || site.domain === AuthenticationService.defaultDomain) {
                    AuthenticationService.callEbayLoveWithDefaultDomain();
                }
                else {
                    parameters.domain = site.domain;
                    AuthenticationService.getEbayLoveToken(localCallback, parameters);
                }
            }
        };
        if (!Account.getAccount()) {
            this.getApplicationToken(function (token) {
                Location.getLocation(token, Configs)
                    .then(getIsoCountryCode)
                    .catch(function (error) {
                    console.log(error);
                });
            });
        }
        else {
            UtilityHelper.sendUpgradeTrackingRequest();
        }
    },
    sendGoogleAnalyticsTrackingInfo: function (aParameters) {
        if (!Account.getAccount()) {
            AuthenticationService.getEbayLoveToken(function () {
                UtilityHelper.sendUpgradeTrackingRequest();
            }, aParameters);
        }
        else {
            UtilityHelper.sendUpgradeTrackingRequest();
        }
    },
    callEbayLoveWithDefaultDomain: function () {
        var parameters = {};
        parameters.domain = AuthenticationService.defaultDomain;
        AuthenticationService.sendGoogleAnalyticsTrackingInfo(parameters);
    },
    loadAuthPage: function (aSourceArea, aEvent) {
        var getAuthURLCallback = function (aUrl) {
            Site.openRawURL(aUrl, aEvent, false);
            MessagePanelService.dismissMessage(MessagePanelService.TYPE.CONNECT_ERROR);
            UpdateController.updateFinished("Sign in");
        };
        AuthenticationService.getUserTokenUrl(aSourceArea, getAuthURLCallback);
        UpdateController.updateStarted("Sign in");
    }
};
(function () { this.init(); }).apply(AuthenticationService);
//# sourceMappingURL=data:application/json;base64,